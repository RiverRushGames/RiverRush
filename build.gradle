buildscript {
    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        jcenter()
    }
    dependencies {
        classpath 'net.saliman:gradle-cobertura-plugin:2.2.8'
        classpath 'de.richsource.gradle.plugins:gwt-gradle-plugin:0.6'
        classpath 'com.android.tools.build:gradle:1.0.0'
        classpath 'org.robovm:robovm-gradle-plugin:1.0.0'
    }
}
plugins {
  id 'net.saliman.cobertura' version '2.2.8'
}

allprojects {
    apply plugin: "eclipse"
    apply plugin: "idea"

    version = '1.0'
    ext {
        appName = 'monkeyrush'
        gdxVersion = '1.5.6'
        roboVMVersion = '1.0.0'
        box2DLightsVersion = '1.3'
        ashleyVersion = '1.4.0'
    }

    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }

    // Print test std output to console, including test results.
    apply plugin: 'java'

    dependencies {
        testCompile group: 'junit', 
                    name:  'junit', 
                    version: '4.12'

        testCompile group: 'org.mockito', 
                    name:  'mockito-core', 
                    version: '2.0.6-beta'

        testCompile group: 'org.hamcrest',
                    name:  'hamcrest-all',
                    version: '1.3'
    }
}
subprojects {
    // Reporting plugins, executed with 'gradle report'
    apply from: "${rootProject.rootDir}/config/checkstyle.gradle" // Checkstyle
    apply from: "${rootProject.rootDir}/config/pmd.gradle"        // PMD
    apply from: "${rootProject.rootDir}/config/findbugs.gradle"   // Findbugs
    apply from: "${rootProject.rootDir}/config/cobertura.gradle"  // Cobertura

    // Print test std output to console, including test results.
    apply plugin: 'java'
    test {
        testLogging {
            showStandardStreams = true
            afterSuite { desc, result ->
                if (!desc.parent) {
                    println "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
                }
            }
        }
    }
}

project(":core") {
    apply plugin: "java"

    dependencies {
        compile "com.badlogicgames.gdx:gdx:$gdxVersion"
    }

    // Reporting plugins, executed with 'gradle report'
    apply from: "${rootProject.rootDir}/config/checkstyle.gradle" // Checkstyle
    apply from: "${rootProject.rootDir}/config/pmd.gradle"        // PMD
    apply from: "${rootProject.rootDir}/config/findbugs.gradle"   // Findbugs
    apply from: "${rootProject.rootDir}/config/cobertura.gradle"  // Cobertura
}

project(":desktop") {
    apply plugin: "java"

    dependencies {
        compile project(":core")
        compile "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    }
}

project(":html") {
    apply plugin: "gwt"
    apply plugin: "war"

    dependencies {
        compile project(":core")
        compile "com.badlogicgames.gdx:gdx-backend-gwt:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx:$gdxVersion:sources"
        compile "com.badlogicgames.gdx:gdx-backend-gwt:$gdxVersion:sources"
    }
}

tasks.eclipse.doLast {
    delete ".project"
}
