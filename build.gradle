buildscript {
    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        jcenter()
    }
    dependencies {
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.0.1'
    }
}

plugins {
    id 'wrapper'
}

allprojects {
    apply plugin: "eclipse"
    apply plugin: "idea"

    version = '1.0'
    ext {
        appName = 'riverrush'
        gdxVersion = '1.5.6'
        roboVMVersion = '1.0.0'
        box2DLightsVersion = '1.3'
        ashleyVersion = '1.4.0'
    }

    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }


}
subprojects {
    apply plugin: 'java'

    // Reporting plugins, executed with 'gradle report'
    apply from: "${rootProject.rootDir}/config/checkstyle.gradle" // Checkstyle
    apply from: "${rootProject.rootDir}/config/pmd.gradle"        // PMD
    apply from: "${rootProject.rootDir}/config/findbugs.gradle"   // Findbugs
    apply from: "${rootProject.rootDir}/config/jacoco.gradle"     // JaCoCO coverage

    // Print test std output to console, including test results.

    test {
        testLogging {
            showStandardStreams = true
            afterSuite { desc, result ->
                if (!desc.parent) {
                    println "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
                }
            }
        }
    }

    dependencies {
        compile group: 'org.java-websocket',
            name: 'Java-WebSocket',
            version: '1.3.0'

        compile group: 'com.google.inject',
            name: 'guice',
            version: '3.0'

        compile group: 'org.reflections',
            name: 'reflections',
            version: '0.9.9'

        testCompile group: 'junit',
            name: 'junit',
            version: '4.12'

        testCompile group: 'org.mockito',
            name: 'mockito-core',
            version: '2.0.6-beta'

        testCompile group: 'org.hamcrest',
            name: 'hamcrest-all',
            version: '1.3'
    }
}

project(":core") {
    dependencies {
        compile "com.badlogicgames.gdx:gdx:$gdxVersion"
    }
}

project(":desktop") {
    dependencies {
        compile project(":core")
        compile "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    }
}

project(":backend") {
    dependencies {
        compile project(":core")
    }
}

task jacocoRootReport(type: org.gradle.testing.jacoco.tasks.JacocoReport) {
    dependsOn = subprojects.test
    sourceDirectories = files(subprojects.sourceSets.main.allSource.srcDirs)
    classDirectories = files(subprojects.sourceSets.main.output)
    executionData = files(subprojects.jacocoTestReport.executionData)
    reports {
        html.enabled = true
        xml.enabled = true
        csv.enabled = false
    }
}

tasks.eclipse.doLast {
    delete ".project"
}

//coveralls {
//    sourceDirs = publishedProjects.sourceSets.main.allSource.srcDirs.flatten()
//    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/jacocoRootReport.xml"
//}
//
//tasks.coveralls {
//    dependsOn jacocoRootReport
//    onlyIf { System.env.'CI' }
//}
